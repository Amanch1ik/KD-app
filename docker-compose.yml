version: '3.9'

services:
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=karakol_delivery
      - POSTGRES_USER=karakol_user
      - POSTGRES_PASSWORD=karakol_password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U karakol_user -d karakol_delivery"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=0
      - SECRET_KEY=your_secret_key_here
      - DATABASE=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=karakol_delivery
      - DB_USER=karakol_user
      - DB_PASSWORD=karakol_password
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_worker:
    build: 
      context: .
      dockerfile: Dockerfile
    command: celery -A karakoldelivery worker -l info
    volumes:
      - .:/app
    environment:
      - DEBUG=0
      - SECRET_KEY=your_secret_key_here
      - DATABASE=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=karakol_delivery
      - DB_USER=karakol_user
      - DB_PASSWORD=karakol_password
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - backend

  celery_beat:
    build: 
      context: .
      dockerfile: Dockerfile
    command: celery -A karakoldelivery beat -l info
    volumes:
      - .:/app
    environment:
      - DEBUG=0
      - SECRET_KEY=your_secret_key_here
      - DATABASE=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=karakol_delivery
      - DB_USER=karakol_user
      - DB_PASSWORD=karakol_password
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - backend

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  default:
    driver: bridge
